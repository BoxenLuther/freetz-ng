--- src/runopts.h
+++ src/runopts.h
@@ -99,6 +99,9 @@
 	gid_t restrict_group_gid;
 #endif
 
+	/* FRITZ!box */
+	int rootonlylogin;
+
 	int noauthpass;
 	int norootpass;
 	int allowblankpass;
--- src/svr-runopts.c
+++ src/svr-runopts.c
@@ -78,6 +78,7 @@
 					"-m		Don't display the motd on login\n"
 #endif
 					"-w		Disallow root logins\n"
+					"-0		Allow only root logins\n"
 #ifdef HAVE_GETGROUPLIST
 					"-G		Restrict logins to members of specified group\n"
 #endif
@@ -162,6 +163,7 @@
 	svr_opts.forced_command = NULL;
 	svr_opts.forkbg = 1;
 	svr_opts.norootlogin = 0;
+	svr_opts.rootonlylogin = 0;
 #ifdef HAVE_GETGROUPLIST
 	svr_opts.restrict_group = NULL;
 	svr_opts.restrict_group_gid = 0;
@@ -293,6 +295,9 @@
 				case 'w':
 					svr_opts.norootlogin = 1;
 					break;
+				case '0':
+					svr_opts.rootonlylogin = 1;
+					break;
 #ifdef HAVE_GETGROUPLIST
 				case 'G':
 					next = &svr_opts.restrict_group;
--- src/svr-auth.c
+++ src/svr-auth.c
@@ -305,6 +305,14 @@
 	}
 #endif /* HAVE_GETGROUPLIST */
 
+	/* FRITZBOX PATCH: only allow root user */
+	if (svr_opts.rootonlylogin && ses.authstate.pw_uid != 0) {
+		TRACE(("leave checkusername: non-root login disabled"))
+		dropbear_log(LOG_WARNING, "non-root login rejected");
+		send_msg_userauth_failure(0, 1);
+		return DROPBEAR_FAILURE;
+	}
+
 	TRACE(("shell is %s", ses.authstate.pw_shell))
 
 	/* check that the shell is set */
